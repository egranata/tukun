WHITESPACE = _{ " " | "\t" | "\r" | "\n" }

hex_digit = { '0'..'9' | 'a'..'f' | 'A'..'F' }
alpha = { 'a'..'z' | 'A'..'Z' }
digit = { '0'..'9' }
ident = @{ !digit ~ (alpha | digit)+ }
integer = { digit+ | ("x" ~ hex_digit+ ~ ";") }
float = { "-"? ~ digit+ ~ "." ~ digit* }
label = @{":" ~ ident}
string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

type_name = {string}
type_array = {^"array(" ~ #count = integer ~ "," ~ #of = type_descriptor ~ ")"}
type_record = {^"record(" ~ type_descriptor ~ ("," ~ type_descriptor)* ~ ")"}

type_descriptor = {type_name | type_array | type_record}

attribute_module_name = {^"@modname" ~ #value = string}
interned_integer = {^"%const" ~ #name = string ~ "=" ~ #value = integer}
interned_float = {^"%const" ~ #name = string ~ "=" ~ #value = float}
interned_string = {^"%const" ~ #name = string ~ "=" ~ #value = string}
typedef = {^"%typedef" ~ #name = string ~ "=" ~ #value = type_descriptor}

interned_value = {interned_float | interned_integer | interned_string}

attribute = {attribute_module_name}

block = {#name = label ~ #body = statement+}

function = {^"fn" ~ #name = ident ~ #body = block+}

module = { SOI ~ (function | interned_value | typedef | attribute)+ ~ EOI }

COMMENT = _{ "#" ~ (!"\n" ~ ANY)* }
