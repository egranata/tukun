// this file is autogenerated, do not edit manually
// to change this file consult gen/genall.sh
#[repr(u8)]
#[derive(Debug)]
pub enum Opcode {
    NOP = 0,
    DUP = 1,
    SWAP = 2,
    POP = 3,
    PUSH = 4,
    FLOOKUP = 5,
    TLOOKUP = 6,
    CALL = 7,
    TYPEOF = 8,
    FROMSLOT = 9,
    TOSLOT = 10,
    ADD = 11,
    SUB = 12,
    EQ = 13,
    LT = 14,
    GT = 15,
    SLT = 16,
    SGT = 17,
    AND = 18,
    OR = 19,
    I2B = 20,
    I2F = 21,
    B2I = 22,
    F2I = 23,
    NOT = 24,
    JUMP = 25,
    JTRUE = 26,
    RET = 27,
    MKARRTYPE = 28,
    MKRECTYPE = 29,
    NEWARR = 30,
    ARRGET = 31,
    ARRSET = 32,
    ARRLEN = 33,
    NEWREC = 34,
    RECGET = 35,
    RECSET = 36,
    MAX,
}
impl From<u8> for Opcode {
    fn from(value: u8) -> Self {
        let max = unsafe { std::mem::transmute::<Opcode, u8>(Opcode::MAX) };
        if value >= max {
            panic!("invalid opcode {value}")
        }
        unsafe { std::mem::transmute(value) }
    }
}
impl From<Opcode> for u8 {
    fn from(value: Opcode) -> Self {
        unsafe { std::mem::transmute(value) }
    }
}
